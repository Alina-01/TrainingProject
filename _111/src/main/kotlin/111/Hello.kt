package 111

import kotlin.math.*

/**
 * Пример
 *
 * Вычисление квадрата целого числа
 */
fun sqr(x: Int) = x * x

/**
 * Пример
 *
 * Вычисление квадрата вещественного числа
 */
fun sqr(x: Double) = x * x

/**
 * Пример
 *
 * Вычисление дискриминанта квадратного уравнения
 */
fun discriminant(a: Double, b: Double, c: Double) = sqr(b) - 4 * a * c

/**
 * Пример
 *
 * Поиск одного из корней квадратного уравнения
 */
fun quadraticEquationRoot(a: Double, b: Double, c: Double) =
        (-b + sqrt(discriminant(a, b, c))) / (2 * a)

/**
 * Пример
 *
 * Поиск произведения корней квадратного уравнения
 */
fun quadraticRootProduct(a: Double, b: Double, c: Double): Double {
    val sd = sqrt(discriminant(a, b, c))
    val x1 = (-b + sd) / (2 * a)
    val x2 = (-b - sd) / (2 * a)
    return x1 * x2 // Результат
}

/**
 * Пример главной функции
 */
fun main() {
    val x1x2 = quadraticRootProduct(1.0, 13.0, 42.0)
    println("Root product: $x1x2")
}
/**
 * Простая:
 *
 * Пользователь задает время, в часах, минутах и секундах, например, 8:20:35.
 * Рассчитать время в секундах, прошедшее с начала суток(30035 в данном случае)
 *
 * */
fun second(hours:Int, minutes: Int, seconds: Int):Int = TODO()

/**
 * Простая:
 *
 * Известно, что поезд выехал с остановки в h1 часов и m1 минут.
 * И прибыл в h2 часов и m2 минут.
 * Рассчитать его время в пути в минутах.
 * Пример:
 * поезд выехал в 21:20 и приехал 22:40. Ответ будет: 80 минут
 * (для начала время считаем до 00:00)
 * */
fun train(h1: Int, m1: Int, h2: Int, m2: Int): Int = TODO()

/**
 * Простая:
 *
 * Рассчитать цену в продуктовом магазине в копейках, зная цену продукта price в рублях.
 * К примеру:
 * стоимость продукта 45,5 рублей, в копейках это будет 4550 копеек
 * либо же 10 рублей в копейках будет 1000
 * */
fun penny(price: Double): Double = TODO()

/**
 * Простая:
 *
 * Петя купил себе n1 больших книг, n2 средних и n3 маленьких, в которых 500, 200 и 50 страниц соотвественно.
 * На каждой странице 25 строк, в каждой строке 45 букв, вывести общее количество букв в этих книгах.
 * Например: в 1 большой, 2 средних и 1 маленькой 1068750 букв.
 * */
fun book(n1: Int, n2: Int, n3: Int): Int = TODO()

/**
 *Простая:
 *
 * Пользователь задает целое число, большее 100 (например, 3801).
 * Определить третью цифру справа в этом числе (в данном случае 8).
 *
 * */
fun thirdDigit(number: Int): Int = TODO()

/**
 * Простая
 *
 * Пользователь задает целое трехзначное число (например, 478).
 * Необходимо вывести число, полученное из заданного перестановкой цифр в обратном порядке (например, 874).
 * */
fun numberRevert(number: Int): Int = TODO()
